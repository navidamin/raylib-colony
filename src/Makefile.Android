#**************************************************************************************************
#
#   raylib makefile for Android project (APK building)
#
#   Copyright (c) 2017-2024 Ramon Santamaria (@raysan5)
#
#**************************************************************************************************

SHELL=cmd

# Define required raylib variables
PLATFORM               ?= PLATFORM_ANDROID
RAYLIB_PATH            ?= ..\..\raylib

# Define Android architecture and API version
ANDROID_ARCH           ?= ARM64
ANDROID_API_VERSION    ?= 29

ifeq ($(ANDROID_ARCH),ARM)
    ANDROID_ARCH_NAME   = armeabi-v7a
endif
ifeq ($(ANDROID_ARCH),ARM64)
    ANDROID_ARCH_NAME   = arm64-v8a
endif
ifeq ($(ANDROID_ARCH),x86)
    ANDROID_ARCH_NAME   = x86
endif
ifeq ($(ANDROID_ARCH),x86_64)
    ANDROID_ARCH_NAME   = x86_64
endif

# Required path variables
JAVA_HOME              ?= C:/open-jdk
ANDROID_HOME           ?= C:/android-sdk
ANDROID_NDK            ?= C:/android-ndk
ANDROID_TOOLCHAIN      ?= $(ANDROID_NDK)/toolchains/llvm/prebuilt/windows-x86_64
ANDROID_BUILD_TOOLS    ?= $(ANDROID_HOME)/build-tools/29.0.3
ANDROID_PLATFORM_TOOLS  = $(ANDROID_HOME)/platform-tools

# Project configuration variables
PROJECT_NAME           ?= colony_game
PROJECT_LIBRARY_NAME   ?= main
PROJECT_BUILD_ID       ?= android
PROJECT_BUILD_PATH     ?= $(PROJECT_BUILD_ID).$(PROJECT_NAME)
PROJECT_RESOURCES_PATH ?= resources

# Source directories
SRC_DIR                ?= .
PROJECT_SOURCE_FILES   ?= $(SRC_DIR)/main.cpp \
                         $(SRC_DIR)/Colony/colony.cpp \
                         $(SRC_DIR)/Engine/Engine.cpp \
                         $(SRC_DIR)/Planet/planet.cpp \
                         $(SRC_DIR)/Sect/sect.cpp \
                         $(SRC_DIR)/Unit/unit.cpp

# Get source directories for mkdir
PROJECT_SOURCE_DIRS     = $(sort $(dir $(PROJECT_SOURCE_FILES)))

# Android app configuration
APP_LABEL_NAME         ?= Colony
APP_COMPANY_NAME       ?= raylib
APP_PRODUCT_NAME       ?= colonygame
APP_VERSION_CODE       ?= 1
APP_VERSION_NAME       ?= 1.0
APP_ICON_LDPI          ?= $(RAYLIB_PATH)\logo\raylib_36x36.png
APP_ICON_MDPI          ?= $(RAYLIB_PATH)\logo\raylib_48x48.png
APP_ICON_HDPI          ?= $(RAYLIB_PATH)\logo\raylib_72x72.png
APP_SCREEN_ORIENTATION ?= landscape
APP_KEYSTORE_PASS      ?= raylib

# Library type
RAYLIB_LIBTYPE         ?= STATIC
RAYLIB_LIB_PATH         = $(RAYLIB_PATH)\src

# Shared libs must be added to APK
ifeq ($(RAYLIB_LIBTYPE),SHARED)
    PROJECT_SHARED_LIBS = lib/$(ANDROID_ARCH_NAME)/libraylib.so 
endif

# Compiler and archiver
ifeq ($(ANDROID_ARCH),ARM)
    CXX = $(ANDROID_TOOLCHAIN)/bin/armv7a-linux-androideabi$(ANDROID_API_VERSION)-clang++
    AR = $(ANDROID_TOOLCHAIN)/bin/arm-linux-androideabi-ar
endif
ifeq ($(ANDROID_ARCH),ARM64)
    CXX = $(ANDROID_TOOLCHAIN)/bin/aarch64-linux-android$(ANDROID_API_VERSION)-clang++
    AR = $(ANDROID_TOOLCHAIN)/bin/aarch64-linux-android-ar
endif
ifeq ($(ANDROID_ARCH),x86)
    CXX = $(ANDROID_TOOLCHAIN)/bin/i686-linux-android$(ANDROID_API_VERSION)-clang++
    AR = $(ANDROID_TOOLCHAIN)/bin/i686-linux-android-ar
endif
ifeq ($(ANDROID_ARCH),x86_64)
    CXX = $(ANDROID_TOOLCHAIN)/bin/x86_64-linux-android$(ANDROID_API_VERSION)-clang++
    AR = $(ANDROID_TOOLCHAIN)/bin/x86_64-linux-android-ar
endif

# Compiler flags
CXXFLAGS = -std=c++17 -Wall \
           -I$(SRC_DIR) -I$(SRC_DIR)/Colony -I$(SRC_DIR)/Engine \
           -I$(SRC_DIR)/Planet -I$(SRC_DIR)/Sect -I$(SRC_DIR)/Unit

# Architecture-specific flags
ifeq ($(ANDROID_ARCH),ARM)
    CXXFLAGS += -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16
endif
ifeq ($(ANDROID_ARCH),ARM64)
    CXXFLAGS += -march=armv8-a -mfix-cortex-a53-835769
endif

# Common Android flags
CXXFLAGS += -ffunction-sections -funwind-tables -fstack-protector-strong -fPIC
CXXFLAGS += -Wall -Wa,--noexecstack -Wformat -Werror=format-security -no-canonical-prefixes
CXXFLAGS += -D__ANDROID__ -DPLATFORM_ANDROID -D__ANDROID_API__=$(ANDROID_API_VERSION)

# Include paths
INCLUDE_PATHS = -I. -I$(RAYLIB_PATH)/src

# Linker flags
LDFLAGS = -Wl,-soname,lib$(PROJECT_LIBRARY_NAME).so -Wl,--exclude-libs,libatomic.a 
LDFLAGS += -Wl,--build-id -Wl,--no-undefined -Wl,-z,noexecstack -Wl,-z,relro -Wl,-z,now -Wl,--warn-shared-textrel -Wl,--fatal-warnings
LDFLAGS += -u ANativeActivity_onCreate
LDFLAGS += -L. -L$(PROJECT_BUILD_PATH)/obj -L$(PROJECT_BUILD_PATH)/lib/$(ANDROID_ARCH_NAME)

# Libraries
LDLIBS = -lm -lc -lraylib -llog -landroid -lEGL -lGLESv2 -lOpenSLES -ldl

# Generate objects list
OBJS = $(patsubst %.cpp, $(PROJECT_BUILD_PATH)/obj/%.o, $(PROJECT_SOURCE_FILES))

# Android APK building process
all: clear \
     create_temp_project_dirs \
     copy_project_required_libs \
     copy_project_resources \
     generate_loader_script \
     generate_android_manifest \
     generate_apk_keystore \
     config_project_package
